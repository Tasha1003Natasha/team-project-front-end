{"version":3,"file":"static/js/90.c18815aa.chunk.js","mappings":"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","sources":["images/icons/google.svg","webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.css?9658","webpack://react-homework-template/./src/components/SignIn/TextField.module.css?5de9","components/SignIn/TextField.jsx","components/AuthForm/AuthForm.jsx","Pages/AuthPage/AuthPage.jsx","webpack://react-homework-template/./src/components/TestForm/TestForm.module.css?f066","webpack://react-homework-template/./src/components/TestCard/TestCard.module.css?ed2c","components/TestCard/TestCard.jsx","components/TestForm/TestForm.jsx","webpack://react-homework-template/./src/Pages/TestPage/TestPage.module.css?0cf4","Pages/TestPage/TestPage.jsx","redux/tests/test-selector.js"],"sourcesContent":["var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGoogle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_23_629)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.8556 7.33402C17.9356 7.33402 18.0005 7.39888 18.0005 7.47889V9C18.0005 9.56932 17.9476 10.126 17.8462 10.666C17.0616 14.8604 13.3663 18.0303 8.93702 17.9998C3.96702 17.9655 -0.0104929 13.9498 0.000511058 8.97972C0.0114447 4.01857 4.03677 0 9.00048 0C11.4323 0 13.6388 0.964758 15.2588 2.53188C15.3173 2.58845 15.3188 2.68168 15.2612 2.7392L13.1093 4.89115C13.0539 4.94656 12.9644 4.948 12.9076 4.89396C11.8908 3.92614 10.5152 3.33197 9.00048 3.33197C5.87259 3.33197 3.35382 5.83284 3.33259 8.96066C3.31125 12.109 5.85712 14.668 9.00048 14.668C11.5509 14.668 13.708 12.9832 14.4193 10.666H9.14536C9.06534 10.666 9.00048 10.6011 9.00048 10.5211V7.47886C9.00048 7.39884 9.06534 7.33398 9.14536 7.33398H17.8556V7.33402Z\",\n    fill: \"#2196F3\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.855 7.33405H16.7685C16.8485 7.33405 16.9134 7.39891 16.9134 7.47892V9.00003C16.9134 9.56935 16.8605 10.126 16.7591 10.666C16.0106 14.6676 12.6129 17.7365 8.45605 17.9838C8.6151 17.9932 8.7752 17.9987 8.93643 17.9998C13.3658 18.0303 17.061 14.8604 17.8456 10.666C17.947 10.126 17.9999 9.56935 17.9999 9.00003V7.47889C17.9999 7.39891 17.935 7.33405 17.855 7.33405Z\",\n    fill: \"#1E88E5\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.85149 6.62632L1.11816 4.65138C2.65161 1.87787 5.60656 0 8.99977 0C11.4316 0 13.6381 0.964758 15.2581 2.53188C15.3166 2.58845 15.3181 2.68168 15.2605 2.7392L13.1086 4.89115C13.0533 4.94645 12.9638 4.94817 12.9071 4.89424C11.8904 3.92625 10.5146 3.332 8.99977 3.332C6.71701 3.332 4.74931 4.68144 3.85149 6.62632Z\",\n    fill: \"#F44336\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.0625 6.05616L3.85158 6.62629C4.67107 4.85111 6.38206 3.57262 8.41022 3.36291C8.42548 3.36126 8.44014 3.35925 8.45568 3.35777C8.27719 3.34083 8.09631 3.33197 7.91336 3.33197C5.8512 3.33197 4.05401 4.41911 3.0625 6.05616Z\",\n    fill: \"#E53935\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.1717 2.53188C14.2302 2.58845 14.2317 2.68168 14.1741 2.73923L12.4275 4.4859C12.5948 4.61317 12.755 4.74929 12.907 4.894C12.9638 4.94803 13.0533 4.94659 13.1087 4.89118L15.2607 2.73923C15.3182 2.68168 15.3167 2.58848 15.2582 2.53188C13.6382 0.964758 11.4317 0 8.99988 0C8.81739 0 8.63633 0.00608203 8.45654 0.0168047C10.6728 0.148816 12.6732 1.08232 14.1717 2.53188Z\",\n    fill: \"#E53935\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.6023 15.1164C13.9587 16.89 11.6089 18 9.00021 18C5.47664 18 2.42607 15.9751 0.94873 13.0252L3.73926 11.1129C4.57664 13.1965 6.61676 14.668 9.00021 14.668C10.496 14.668 11.8563 14.0885 12.8689 13.1418L15.6023 15.1164Z\",\n    fill: \"#4CAF50\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.73888 11.1129L2.91602 11.6768C3.87174 13.4572 5.75116 14.668 7.9133 14.668C8.09615 14.668 8.27689 14.659 8.4553 14.6421C6.30905 14.4375 4.51169 13.0359 3.73888 11.1129Z\",\n    fill: \"#43A047\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.99991 18C11.6086 18 13.9584 16.89 15.602 15.1164L14.9325 14.6328C13.3893 16.5533 11.0742 17.8274 8.45801 17.9836C8.6373 17.9943 8.81794 18 8.99991 18Z\",\n    fill: \"#43A047\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.332 8.99998C3.332 9.74677 3.4765 10.4599 3.73908 11.1129L0.948516 13.0252C0.341543 11.8141 0 10.4469 0 8.99998C0 7.42273 0.405633 5.94034 1.11839 4.65137L3.85172 6.6263C3.51816 7.3481 3.332 8.15251 3.332 8.99998Z\",\n    fill: \"#FFC107\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.91634 11.6768L3.73921 11.1129C3.47663 10.4599 3.33214 9.74676 3.33214 8.99997C3.33214 8.15249 3.51829 7.34808 3.85185 6.62628L3.06277 6.05615C2.55037 6.90219 2.25298 7.89497 2.24574 8.96066C2.23906 9.94342 2.48259 10.8688 2.91634 11.6768Z\",\n    fill: \"#FFB300\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_23_629\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 18,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGoogle);\nexport default __webpack_public_path__ + \"static/media/google.f04463201c59f95bf3d62b7a2359d1f0.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AuthForm_container__VCAm2\",\"authSection\":\"AuthForm_authSection__uLwwB\",\"authTitle\":\"AuthForm_authTitle__ZL80O\",\"authText\":\"AuthForm_authText__FAJmL\",\"descriptionWrapper\":\"AuthForm_descriptionWrapper__lLJzQ\",\"formWrapper\":\"AuthForm_formWrapper__W9tA0\",\"formText\":\"AuthForm_formText__fRyBc\",\"loginText\":\"AuthForm_loginText__t8Iw7\",\"authButton\":\"AuthForm_authButton__AQO+v\",\"googleIcon\":\"AuthForm_googleIcon__g+782\",\"inputsWrapper\":\"AuthForm_inputsWrapper__zeoit\",\"inputForm\":\"AuthForm_inputForm__htFku\",\"btnsWrapper\":\"AuthForm_btnsWrapper__KA6HD\",\"formButton\":\"AuthForm_formButton__UXWhd\",\"authWrapper\":\"AuthForm_authWrapper__F3KTH\"};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"TextField_label__pQqAu\",\"error\":\"TextField_error__hVM0Q\"};","import React from 'react';\nimport { ErrorMessage, useField } from 'formik';\n\nimport styles from './TextField.module.css';\nexport const TextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className=\"mb-2\">\n      <label className={styles.label} htmlFor={field.name}>\n        {label}\n      </label>\n      <input\n        // style={{\n        //   borderRadius: '30px',\n        //   padding: '10px 0px 10px 22px',\n        // }}\n        className={`form-control shadow-none ${\n          meta.touched && meta.error && 'is-invalid'\n        }`}\n        {...field}\n        {...props}\n        autoComplete=\"off\"\n      />\n      <ErrorMessage\n        component=\"div\"\n        name={field.name}\n        className={styles.error}\n      />\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signUp, logIn } from 'redux/auth/auth-operations';\nimport { ReactComponent as GoogleIcon } from '../../images/icons/google.svg';\nimport { Link } from 'react-router-dom';\n\nimport s from './AuthForm.module.css';\n\n//validate\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField } from 'components/SignIn/TextField';\n\nconst AuthForm = () => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = evt => {\n    switch (evt.target.name) {\n      case 'email':\n        setEmail(evt.target.value);\n        break;\n      case 'password':\n        setPassword(evt.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // // Зайти\n  const handleSignIn = evt => {\n    evt.preventDefault();\n    const user = { email, password };\n    dispatch(logIn(user));\n  };\n\n  // // Реєстрація\n  const handleSignUp = () => {\n    const user = { email, password };\n    dispatch(signUp(user));\n  };\n\n  //Validate\n  const validate = Yup.object({\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string()\n      .min(9, 'Password must be at least 9 charaters')\n      .required('Password is required'),\n  });\n\n  return (\n    <main>\n      <section className={s.authSection}>\n        <div className={s.container}>\n          <div className={s.authWrapper}>\n            <div className={s.descriptionWrapper}>\n              <h1 className={s.authTitle}>Pro Test</h1>\n              <p className={s.authText}>\n                <span>[</span> We will help you find weak points in knowledge so\n                that you can strengthen it. We will show you what is relevant to\n                know for a<span> QA Engineer</span> and will try to make the\n                learning process more diverse_ <span>]</span>\n              </p>\n            </div>\n            <Formik\n              initialValues={{\n                email: '',\n                password: '',\n              }}\n              validationSchema={validate}\n            >\n              {formik => (\n                <div className={s.formWrapper}>\n                  <Form className={s.authForm} onChange={handleChange}>\n                    <p className={s.formText}>\n                      You can use your Google Account to authorize:\n                    </p>\n                    <button className={s.authButton}>\n                      <a\n                        className={s.googleIcon}\n                        href=\"https://www.google.com/\"\n                      >\n                        <GoogleIcon />\n                        Google\n                      </a>\n                    </button>\n                    <p className={s.loginText}>\n                      Or login to our app using e-mail and password:\n                    </p>\n                    <div className={s.inputsWrapper}>\n                      <TextField\n                        className={s.inputForm}\n                        name=\"email\"\n                        type=\"email\"\n                        value={email}\n                        // onChange={handleChange}\n                        placeholder=\"E-mail\"\n                      />\n                      <TextField\n                        className={s.inputForm}\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        // onChange={handleChange}\n                      />\n                    </div>\n                    <div className={s.btnsWrapper}>\n                      <Link\n                        to=\"/\"\n                        className={s.formButton}\n                        onClick={handleSignIn}\n                      >\n                        Sign in\n                      </Link>\n\n                      <button\n                        className={s.formButton}\n                        onClick={handleSignUp}\n                        type=\"button\"\n                      >\n                        Sign up\n                      </button>\n                    </div>\n                  </Form>\n                </div>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm/AuthForm';\n\nconst AuthPage = () => {\n  return (\n    <>\n      <AuthForm />\n    </>\n  );\n};\n\nexport default AuthPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"questionContainer\":\"TestForm_questionContainer__-SfcQ\",\"btnQuestions\":\"TestForm_btnQuestions__aCL5H\",\"testFooter\":\"TestForm_testFooter__VT1R1\",\"arrowBack\":\"TestForm_arrowBack__XN32v\",\"numberQuestion\":\"TestForm_numberQuestion__BSk8e\",\"active\":\"TestForm_active__AD08p\"};","// extracted by mini-css-extract-plugin\nexport default {\"questionText\":\"TestCard_questionText__rwS8o\",\"line\":\"TestCard_line__rrQlQ\",\"answersList\":\"TestCard_answersList__9zE7V\",\"answersItem\":\"TestCard_answersItem__aMePg\",\"radio\":\"TestCard_radio__TAiFJ\"};","// import { useEffect, useState } from 'react';\n// import style from './TestCard.module.css';\nimport { useSelector } from 'react-redux';\nimport { getTechTest, getTheoryTest } from '../../redux/tests/test-selector';\nimport style from './TestCard.module.css';\n\nconst TestCard = ({ index = 0 }) => {\n  let currentIndex = Number(index);\n\n  const testTech = useSelector(getTechTest);\n  const testTheory = useSelector(getTheoryTest);\n  // const nextBtn = document.getElementsByName('next');\n\n  return (\n    <>\n      {testTech[currentIndex] && (\n        <>\n          <p className={style.questionText}>\n            {testTech[currentIndex].question}\n          </p>\n          <hr className={style.line} />\n          {/* <p>{testTech[currentIndex]._id}</p> */}\n          <ul className={style.answersList}>\n            {testTech[currentIndex].answers.map((answer, ind) => {\n              return (\n                <li className={style.answersItem} key={ind}>\n                  <input\n                    className={style.radio}\n                    // style=\"background-color: #ff6b09\"\n                    name=\"r1\"\n                    type=\"radio\"\n                    value={answer}\n                    onClick={evt => {\n                      document.getElementsByName('next').disabled = 'false';\n                    }}\n                    defaultChecked={false}\n                  />\n                  {answer}\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n\n      {testTheory[currentIndex] && (\n        <div>\n          <p>{testTheory[currentIndex].question}</p>\n          <ul>\n            {testTheory[currentIndex].answers.map((answer, ind) => {\n              return (\n                <>\n                  <li key={currentIndex}>\n                    <input\n                      name=\"r1\"\n                      type=\"radio\"\n                      value={answer}\n                      id={ind}\n                      key={ind}\n                    />\n                    {answer}\n                  </li>\n                </>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default TestCard;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './TestForm.module.css';\nimport { useSelector } from 'react-redux';\nimport { getTechTest, getTheoryTest } from '../../redux/tests/test-selector';\nimport { results } from 'redux/tests/tests-operations';\nimport { useDispatch } from 'react-redux';\nimport TestCard from '../TestCard/TestCard';\nimport Sprite from '../../images/icons/icons.svg';\n\nexport const TestForm = () => {\n  const screenWidth = window.screen.width;\n  console.log(screenWidth);\n  const [index, setIndex] = useState('0');\n  const [answer, setAnswer] = useState([]);\n  // const [active, setActive] = useState('true');\n  const dispatch = useDispatch();\n\n  const radioButton = document.getElementsByName('r1');\n\n  // nextBtn.disabled = true;\n\n  // console.log(nextBtn);\n\n  const testTech = useSelector(getTechTest);\n  const testTheory = useSelector(getTheoryTest);\n\n  const checkAnswer = radioButton => {\n    for (let i = 0; i < radioButton.length; i++) {\n      if (radioButton[i].checked && testTech[0]) {\n        const userAnswer = {\n          userAnswer: radioButton[i].value,\n          _id: testTech[Number(index)]._id,\n        };\n        unClick(radioButton[i]);\n\n        for (let i = 0; i < answer.length; i++) {\n          if (userAnswer._id === answer[i]._id) {\n            const index = answer.indexOf(answer[i]);\n\n            answer.splice(index, 1);\n          }\n        }\n\n        setAnswer([...answer, userAnswer]);\n      }\n      if (radioButton[i].checked && testTheory[0]) {\n        const userAnswer = {\n          userAnswer: radioButton[i].value,\n          _id: testTheory[Number(index)]._id,\n        };\n\n        for (let i = 0; i < answer.length; i++) {\n          if (userAnswer._id === answer[i]._id) {\n            const index = answer.indexOf(answer[i]);\n\n            answer.splice(index, 1);\n          }\n        }\n\n        setAnswer([...answer, userAnswer]);\n      }\n    }\n  };\n\n  const currentQuestionIndexBack = evt => {\n    checkAnswer(radioButton);\n    chechButton(radioButton);\n    const backIndex = Number(index) - 1;\n    if (backIndex > 0 && backIndex <= 12) {\n      setIndex(backIndex);\n    }\n    if (backIndex < 1) {\n      setIndex(0);\n    }\n  };\n\n  const currentQuestionIndexNext = evt => {\n    checkAnswer(radioButton);\n\n    const NextIndex = Number(index) + 1;\n    if (NextIndex > 0 && NextIndex <= 12) {\n      setIndex(NextIndex);\n      // setActive('true');\n    }\n    if (NextIndex < 0) {\n      setIndex(0);\n    }\n  };\n\n  const getResultsFunc = () => {\n    checkAnswer(radioButton);\n    dispatch(results(answer));\n  };\n\n  localStorage.setItem('userAnswers', JSON.stringify(answer));\n\n  const localStorageArrayAnswers = JSON.parse(\n    localStorage.getItem('userAnswers')\n  );\n  console.log(localStorageArrayAnswers);\n\n  const chechButton = radioButton => {\n    if (localStorageArrayAnswers.length) {\n      for (let i = 0; i < radioButton.length; i++) {\n        // console.log(radioButton[i]);\n        for (let j = 0; j < localStorageArrayAnswers.length; j++) {\n          if (\n            testTech[Number(index)]._id === localStorageArrayAnswers[j]._id &&\n            String(radioButton[i].value).length ===\n              String(localStorageArrayAnswers[j].userAnswer).len\n          ) {\n            radioButton[i].value === localStorageArrayAnswers[j].userAnswer\n              ? (radioButton[i].checked = true)\n              : (radioButton[i].checked = false);\n          }\n        }\n      }\n    }\n  };\n\n  const unClick = radioButton => {\n    radioButton.checked = false;\n  };\n\n  return (\n    <>\n      <div className={style.questionContainer}>\n        <p className={style.numberQuestion}>\n          Question <span className={style.active}>{Number(index) + 1}</span> /\n          12\n        </p>\n        <TestCard index={index} radioButton={radioButton} />\n      </div>\n      <div className={style.testFooter}>\n        <button\n          className={style.btnQuestions}\n          type=\"button\"\n          name=\"back\"\n          onClick={currentQuestionIndexBack}\n        >\n          <svg className={style.arrowBack} width={24} height={16}>\n            <use href={`${Sprite}#arrow`}></use>\n          </svg>\n          {screenWidth >= 768 && <span>Previous question</span>}\n        </button>\n        {Number(index) + 1 < 12 ? (\n          <button\n            className={style.btnQuestions}\n            type=\"button\"\n            name=\"next\"\n            onClick={currentQuestionIndexNext}\n          >\n            {screenWidth >= 768 && <span>Next question</span>}\n            <svg className={style.arrowNext} width={24} height={16}>\n              <use href={`${Sprite}#arrow`}></use>\n            </svg>\n          </button>\n        ) : (\n          <Link\n            className={style.btnQuestions}\n            to=\"/results\"\n            name=\"finish\"\n            onClick={getResultsFunc}\n          >\n            <span>Finish test</span>\n          </Link>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default TestForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionTest\":\"TestPage_sectionTest__Bovcs\",\"hederTest\":\"TestPage_hederTest__x0z-N\",\"hederText\":\"TestPage_hederText__n+1xu\",\"closeBtn\":\"TestPage_closeBtn__5wq5H\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getTechTest, getTheoryTest } from '../../redux/tests/test-selector';\n\nimport TestForm from '../../components/TestForm/TestForm';\nimport { Link } from 'react-router-dom';\nimport style from './TestPage.module.css';\nimport { getToken } from 'redux/auth/auth-selector';\nimport AuthPage from 'Pages/AuthPage/AuthPage';\n\nconst TestPage = () => {\n  const dispatch = useDispatch();\n  const testTech = useSelector(getTechTest);\n  const theoryTest = useSelector(getTheoryTest);\n  const nextBtn = document.getElementsByName('next');\n  nextBtn.disabled = true;\n\n  const isLogin = useSelector(getToken);\n  const hendlerCloseTest = () => {\n    const test = [];\n    dispatch(testTech(test));\n    dispatch(theoryTest(test));\n  };\n\n  return (\n    <>\n      {isLogin ? (\n        <section className={style.sectionTest}>\n          <div className={style.hederTest}>\n            {testTech[0] ? (\n              <p className={style.hederText}>[QA_technical&shy;_training]</p>\n            ) : (\n              <p className={style.hederTest}>[Testing&shy;theory_]</p>\n            )}\n\n            <Link\n              className={style.closeBtn}\n              to=\"/\"\n              type=\"button\"\n              onClick={hendlerCloseTest}\n            >\n              Close test\n            </Link>\n          </div>\n          <TestForm nextBtn={nextBtn} />\n        </section>\n      ) : (\n        <AuthPage />\n      )}\n    </>\n  );\n};\n\nexport default TestPage;\n","export const getTechTest = state => state.test.testTech;\nexport const getTheoryTest = state => state.test.testTheory;\nexport const getCurrectAnswer = state => state.test.results.correct;\nexport const getIncurrectAnswer = state => state.test.results.incorrect;\n"],"names":["_g","_defs","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGoogle","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","clipPath","d","ForwardRef","TextField","label","useField","field","meta","className","styles","htmlFor","name","touched","error","autoComplete","component","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","evt","value","handleSignIn","preventDefault","user","logIn","handleSignUp","signUp","validate","Yup","required","min","s","initialValues","validationSchema","formik","onChange","href","type","placeholder","to","onClick","index","currentIndex","Number","testTech","useSelector","getTechTest","testTheory","getTheoryTest","style","question","answers","map","answer","ind","document","getElementsByName","disabled","defaultChecked","screenWidth","window","screen","console","log","setIndex","setAnswer","radioButton","checkAnswer","checked","userAnswer","_id","unClick","splice","localStorage","setItem","JSON","stringify","localStorageArrayAnswers","parse","getItem","chechButton","j","String","len","backIndex","Sprite","NextIndex","results","theoryTest","nextBtn","isLogin","getToken","test","AuthPage","state","getCurrectAnswer","correct","getIncurrectAnswer","incorrect"],"sourceRoot":""}